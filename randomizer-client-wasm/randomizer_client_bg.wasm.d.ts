/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_randomizerclient_free(a: number): void;
export function randomizerclient_init(): void;
export function randomizerclient_new(a: number, b: number, c: number, d: number, e: number): number;
export function randomizerclient_initialize(a: number): number;
export function randomizerclient_get_session_data(a: number): number;
export function randomizerclient_register_player(a: number, b: number): number;
export function randomizerclient_unregister_player(a: number): number;
export function randomizerclient_login_player(a: number, b: number, c: number): number;
export function randomizerclient_get_client_data(a: number): number;
export function randomizerclient_get_patch(a: number): number;
export function randomizerclient_list_devices(a: number): number;
export function randomizerclient_get_events(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number): number;
export function randomizerclient_get_report(a: number, b: number, c: number, d: number): number;
export function randomizerclient_send_event(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): number;
export function randomizerclient_forfeit(a: number): number;
export function randomizerclient_start(a: number, b: number, c: number): number;
export function randomizerclient_update(a: number): number;
export function __wbg_consoleinterface_free(a: number): void;
export function consoleinterface_init(): void;
export function consoleinterface_new(a: number, b: number, c: number, d: number): number;
export function consoleinterface_connect(a: number): number;
export function consoleinterface_disconnect(a: number): number;
export function consoleinterface_list_devices(a: number): number;
export function consoleinterface_read(a: number, b: number, c: number, d: number, e: number): number;
export function consoleinterface_read_multi(a: number, b: number, c: number, d: number, e: number): number;
export function consoleinterface_write(a: number, b: number, c: number, d: number, e: number): number;
export function consoleinterface_write_multi(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function __wbg_queuingstrategy_free(a: number): void;
export function queuingstrategy_highWaterMark(a: number): number;
export function __wbg_intounderlyingbytesource_free(a: number): void;
export function intounderlyingbytesource_type(a: number): number;
export function intounderlyingbytesource_autoAllocateChunkSize(a: number): number;
export function intounderlyingbytesource_start(a: number, b: number): void;
export function intounderlyingbytesource_pull(a: number, b: number): number;
export function intounderlyingbytesource_cancel(a: number): void;
export function __wbg_intounderlyingsource_free(a: number): void;
export function intounderlyingsource_pull(a: number, b: number): number;
export function intounderlyingsource_cancel(a: number): void;
export function __wbg_readablestreamgetreaderoptions_free(a: number): void;
export function readablestreamgetreaderoptions_mode(a: number): number;
export function __wbg_pipeoptions_free(a: number): void;
export function pipeoptions_preventClose(a: number): number;
export function pipeoptions_preventCancel(a: number): number;
export function pipeoptions_preventAbort(a: number): number;
export function pipeoptions_signal(a: number): number;
export function __wbg_intounderlyingsink_free(a: number): void;
export function intounderlyingsink_write(a: number, b: number): number;
export function intounderlyingsink_close(a: number): number;
export function intounderlyingsink_abort(a: number, b: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h6c2eeb6a95afb3a3(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7e43481001c160ad(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hfbc062f85ccba163(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h25db5ebf9fa5f9ce(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h6de85b57e9069a50(a: number, b: number, c: number, d: number): void;
